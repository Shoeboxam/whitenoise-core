

branches:
  # all branches
  only:
  - gh-pages
  - /.*/

# all jobs should enable the release flag for compiler optimizations
env:
  global:
  - WHITENOISE_RELEASE=True
  - PROTO_VERSION=3.11.4


notifications:
  email: false

jobs:
  include:
  # - name: Test Rust
  #   os: linux
  #   language: rust
  #   rust: stable
  #   script:
  #   # (1) Rust Validator -> Test & Build
  #   - cd validator-rust; cargo build --verbose --workspace;
  #   - cargo test --verbose --workspace;
  #   - cd ..
  #   # (2) Rust Runtime -> Test & Build
  #   - cd runtime-rust; cargo build --verbose --workspace;
  #   - cargo test --verbose --workspace;
  #   - cd ..;
  #   # (3) Build python bindings and run tests
  #   #   > Commented out for now.  It works but takes a while to run...
  #   #- cd bindings-python; python3 -m pip install -r requirements.txt;
  #   #- export RUST_BACKTRACE=1; python3 -m pip install -e . -v;
  #   #- python3 -m pytest -x -v; cd ..;

  #   after_success:
  #   #
  #   # Build the documentation for gh-pages
  #   #
  #   - echo $TRAVIS_BRANCH;
  #   # switch to master after initial version
  #   - if [ "$TRAVIS_BRANCH" == "develop" ]; then
  #     cd runtime-rust;
  #     cargo doc --verbose --target-dir=../docs;
  #     cd ..; rm -rf docs/debug;
  #     fi

  # 32-bit
  - name: Deploy manylinux2010_i686
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_i686
         PROTO_PLAT=linux-x86_32.zip
         PYTHON_PLAT=manylinux2010_i686
    install:
    - docker pull $DOCKER_IMAGE
    - yum -y install gcc
    script:
    - docker run --rm -e PLAT=$PYTHON_PLAT -v `pwd`:/io $DOCKER_IMAGE linux32 /io/travis/manylinux-build-wheels.sh $PROTO_VERSION $PROTO_PLAT
    - ls wheelhouse/

  # 64-bit
  - name: Deploy manylinux2010_x86_64
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64
         PROTO_PLAT=linux-x86_64.zip
         PYTHON_PLAT=manylinux1_x86_64
    install:
    - docker pull $DOCKER_IMAGE
    - chmod +x travis/manylinux-build-wheels.sh
    script:
    - docker run --rm -e PLAT=$PYTHON_PLAT -v `pwd`:/io $DOCKER_IMAGE /io/travis/manylinux-build-wheels.sh $PROTO_VERSION $PROTO_PLAT
    - ls wheelhouse/

  # RISC
  - name: Deploy manylinux2014_aarch64
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64
         PROTO_PLAT=linux-aarch_64.zip
         PYTHON_PLAT=manylinux2014_aarch64
    install:
    - docker pull $DOCKER_IMAGE
    - chmod +x travis/manylinux-build-wheels.sh
    script:
    - docker run --rm -e PLAT=$PYTHON_PLAT -v `pwd`:/io $DOCKER_IMAGE /io/travis/manylinux-build-wheels.sh $PROTO_VERSION $PROTO_PLAT
    - ls wheelhouse/


  - name: Deploy osx
    # adapted from: https://github.com/cclauss/Travis-CI-Python-on-three-OSes/blob/master/.travis.yml  
    os: osx
    osx_image: xcode11 # python3.7 comes installed with xcode11 image
    language: rust
    rust: stable  
    script:
    - cd bindings-python
    - python3 setup.py bdist_wheel

  - name: Deploy windows
    language: rust
    rust: stable
    os: windows
    before_install:
      - choco install python --version 3.7.5  # this install takes at least 1 min 30 sec
      - python -m pip install --upgrade pip
      - choco install protoc
      - choco install rust
    env: PATH=/c/Python37:/c/Python37/Scripts:$PATH
    script:
    - cd bindings-python
    - python3 setup.py bdist_wheel -d ../wheelhouse/